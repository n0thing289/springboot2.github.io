package com.bjpowernode;

import com.bjpowernode.service.UserService;
import com.bjpowernode.service.impl.UserServiceImpl;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.annotation.Bean;


// Generated by https://start.springboot.io
// 优质的 spring/boot/data/security/cloud 框架中文文档尽在 => https://springdoc.cn
@SpringBootApplication
public class Springboot010ContainerApplication {

    public static void main(String[] args) {
        ConfigurableApplicationContext ctx = SpringApplication.run(Springboot010ContainerApplication.class, args);
        //用@Service注入到容器中
//        UserService userService1 = ctx.getBean("userService", UserService.class);
//
//        userService1.sayHello();
        //用@Bean注入到容器
        UserService userService2 = ctx.getBean("userServiceByBean", UserService.class);

        userService2.sayHello();
    }

    /**
     * 因为@SpringBootApplication这个注解, 有@SpringBootConfiguration注解
     * 因为@SpringBootConfiguration注解, 有@Configuration注解
     *
     * 因为@Configuration是可以用在JavaConfig中的, 用来代替spring.xml文件
     * 所以可以在这个@SpringBootApplication类中去创建Bean,并且放入到容器中
     *
     * bean的id默认是方法名, 或者通过@Bean name|value属性指定名字
     * @return
     */
    @Bean("userServiceByBean")
    public UserService makeUserService(){
        return new UserServiceImpl();
    }
}
